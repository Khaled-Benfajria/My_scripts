#!/bin/bash

# Author: Khaled Benfajria
# Date Created: 01-02-2023

# Description:
# Install latest version of Jenkins, Maven, SonarQube,Nexus Repository, Docker, Kubernetes (single node) on Ubuntu 20.04 

#######################################
# Print a message in a given color.
#######################################
function print_color(){
  NC='\033[0m' # No Color

  case $1 in
    "green") COLOR='\033[1;32m' ;;
    "red") COLOR='\033[1;31m' ;;
    "yellow") COLOR='\033[1;33m' ;;
    "blue") COLOR='\033[1;34m' ;;
  esac

  echo -e "${COLOR} $2 ${NC}"
}
print_color "yellow" '----------CI/CD Playground----------'
echo

# Install Jenkins & Maven
print_color "green" '-----Install Jenkins & Maven-----'
 sudo apt update && sudo apt upgrade -y
 sudo apt-get install ca-certificates gnupg2 software-properties-common git wget gnupg curl apt-transport-https -y
 sudo apt install fontconfig openjdk-17-jre -y
 sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
 echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]" \
  https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
 sudo apt-get update
 sudo apt-get install jenkins maven -y
 sudo sed -i 's/Environment="JENKINS_PORT=8080"/Environment="JENKINS_PORT=8082"/g' /usr/lib/systemd/system/jenkins.service # Change jenkins default port
 sudo systemctl daemon-reload && sudo systemctl restart jenkins
 
# Install Docker & Kubernetes
print_color "green" '-----Install Docker & Kubernetes-----'
sudo mkdir -p -m 755 /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt update
sudo apt -y install vim git curl wget kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab && sudo swapoff -a
sudo modprobe overlay && sudo modprobe br_netfilter
sudo apt update
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt update
sudo apt install -y containerd.io docker-ce docker-ce-cli
sudo mkdir -p /etc/systemd/system/docker.service.d

sudo tee /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

sudo systemctl daemon-reload && sudo systemctl restart docker && sudo systemctl enable docker
sudo apt update
VER=$(curl -s https://api.github.com/repos/Mirantis/cri-dockerd/releases/latest|grep tag_name | cut -d '"' -f 4|sed 's/v//g')
wget https://github.com/Mirantis/cri-dockerd/releases/download/v${VER}/cri-dockerd-${VER}.amd64.tgz
tar xvf cri-dockerd-${VER}.amd64.tgz
sudo mv cri-dockerd/cri-dockerd /usr/local/bin/
wget https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.service
wget https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.socket
sudo mv cri-docker.socket cri-docker.service /etc/systemd/system/
sudo sed -i -e 's,/usr/bin/cri-dockerd,/usr/local/bin/cri-dockerd,' /etc/systemd/system/cri-docker.service
sudo systemctl daemon-reload && sudo systemctl enable cri-docker.service && sudo systemctl enable --now cri-docker.socket
lsmod | grep br_netfilter
sudo systemctl enable kubelet
sudo kubeadm config images pull --cri-socket /run/cri-dockerd.sock 

sudo kubeadm init \
  --pod-network-cidr=192.168.0.0/16 \
  --cri-socket unix:///run/cri-dockerd.sock \
  --ignore-preflight-errors=all
  
mkdir -p $HOME/.kube
sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl taint nodes $(hostname) node-role.kubernetes.io/control-plane:NoSchedule-
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/tigera-operator.yaml 
curl https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/custom-resources.yaml -O
kubectl create -f custom-resources.yaml

# Install SonarQube
print_color "green" '-----Install SonarQube-----'
sudo docker run -d --name sonarqube -e SONAR_ES_BOOTSTRAB_CHECKS_DISABLE=true -p 9000:9000 sonarqube:latest

# Install Nexus Repository
print_color "green" '-----Install Nexus Repository-----'
# sudo apt install openjdk-17-jre -y # Already installed with jenkins
cd /opt && sudo wget https://download.sonatype.com/nexus/3/nexus-3.72.0-04-unix.tar.gz
sudo tar -zxvf nexus-3.72.0-04-unix.tar.gz && sudo rm -f nexus-3.72.0-04-unix.tar.gz
sudo chown $USER:$USER -R nexus-3.72.0-04/ && sudo chown $USER:$USER -R sonatype-work
/opt/nexus-3.72.0-04/bin/nexus start
